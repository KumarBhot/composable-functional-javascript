{
  "name": "composable-functional-javascript",
  "version": "1.0.0",
  "description": "1.  [Create linear data flow with container style types (Box)](01.introduction-box.js)\r 2.  [Refactor imperative code to a single composed expression using Box](02.imperative-to-composed.js)\r 3.  [Enforce a null check with composable code branching using Either](03.null-check-with-either.js)\r 4.  [Use chain for composable error handling with nested Either](04.nested-either-using-chain.js)\r 5.  [Examples of Either in comparison with imperative code](05.either-examples.js)\r 6.  [Create types with Semigroups](06.types-with-semigroups.js)",
  "main": "01.introduction-box.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/KumarBhot/composable-functional-javascript.git"
  },
  "author": "Kumar Bhot <kumarbhot@yahoo.com>",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/KumarBhot/composable-functional-javascript/issues"
  },
  "homepage": "https://github.com/KumarBhot/composable-functional-javascript#readme",
  "dependencies": {
    "data.task": "^3.1.2",
    "futurize": "^1.2.0",
    "immutable": "^4.0.0-rc.12",
    "immutable-ext": "^1.1.5"
  }
}
